{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Slim Moms - OpenAPI 3.0",
    "description": "Diet service.",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "mlightpro@gmail.com"
    },
    "version": "1.0.8"
  },
  "externalDocs": {
    "description": "Slim-Mom - Website",
    "url": "slim-mom-frontend.vercel.app/"
  },
  "servers": [
    {
      "url": "https://slim-mom-backend-node.herokuapp.com",
      "description": "Production server"
    },
    {
      "url": "https://Slim-Mom-Frontend",
      "description": "Beta server"
    },
    {
      "url": "https://github.com/Specter-ode/Slim-Mom-Frontend",
      "description": "github.com"
    }
  ],
  "tags": [
    {
      "name": "Endpoints",
      "description": ""
    }
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["AUTH ENDPOINTS. Register"],
        "summary": "user registration",
        "description": "Create new user",
        "operationId": "CreateUser",
        "requestBody": {
          "description": "Here is what you have to write during registration",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Register"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Register"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Register"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User has been successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResp"
                }
              }
            }
          },
          "409": {
            "description": "Email in use."
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["login"],
        "summary": "user authentication into the system",
        "description": "Login User",
        "operationId": "LoginUser",
        "parameters": [
          {
            "name": "examplename",
            "in": "query",
            "description": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "password",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfull authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResp"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResp"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong"
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["current User"],
        "summary": "Get all your info",
        "description": "Request information about the current user",
        "operationId": "CurrentUser",
        "parameters": [
          {
            "name": "Bearer Token",
            "in": "query",
            "description": "Add Bearer Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUser"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUser"
                }
              }
            }
          },
          "401": {
            "description": "Invalid signature"
          }
        }
      }
    },
    "/api/users/google": {
      "get": {
        "tags": ["Google Auth"],
        "summary": "user authentication into the system via google service",
        "description": "Login User",
        "operationId": "googleLogin",
        "responses": {
          "302": {
            "description": "Found"
          }
        }
      }
    },
    "/api/users/facebook": {
      "get": {
        "tags": ["Facebook Auth"],
        "summary": "user authentication into the system via facebook service",
        "description": "Login User",
        "operationId": "facebookUser",
        "responses": {
          "302": {
            "description": "Found"
          }
        }
      }
    },
    "/api/users/logout": {
      "get": {
        "tags": ["logout"],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "parameters": [
          {
            "name": "Bearer Token",
            "in": "query",
            "description": "Add Bearer Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User successful unauthorized"
          }
        }
      }
    },
    "/api/users/refresh": {
      "post": {
        "tags": ["refresh"],
        "summary": "Automatically update accessToken after it expires",
        "description": "Refresh Token",
        "operationId": "refreshToken",
        "requestBody": {
          "description": "Refresh Token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshToken"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RefreshToken"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RefreshToken"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Refresh"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Refresh"
                }
              }
            }
          },
          "401": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/products/:{product}": {
      "get": {
        "tags": ["Get product info"],
        "summary": "Get information about one product",
        "description": "",
        "operationId": "getProductData",
        "parameters": [
          {
            "name": "product",
            "in": "path",
            "description": "Name or some letters of the product (in ukrainian) what you want to find",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/api/daily-intake": {
      "post": {
        "tags": ["Daily diet for unregistered user"],
        "summary": "Send anthropometry to get daily calorie",
        "description": "Get daily calorie intake and a list of non-recommended foods for an Unregistered user",
        "operationId": "getCaloriesAndListUnregisterUser",
        "requestBody": {
          "description": "Here you need to enter anthropometry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Anthropometry"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Anthropometry"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Anthropometry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnthropometryResp"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AnthropometryResp"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/api/daily-intake/user": {
      "post": {
        "tags": ["DailyDiet for registered user"],
        "summary": "Send anthropometry to get daily calorie",
        "description": "Get daily calorie intake and a list of non-recommended foods for an Registered user",
        "operationId": "getCaloriesAndList",
        "parameters": [
          {
            "name": "Bearer Token",
            "in": "query",
            "description": "Add Bearer Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Here you need to enter anthropometry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Anthropometry"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Anthropometry"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Anthropometry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnthropometryResp"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AnthropometryResp"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/api/dailynutritions/addmeal": {
      "post": {
        "tags": ["Add meal"],
        "summary": "Get info about product",
        "description": "You send information about the date, product, grams and get info about product in diery",
        "operationId": "getCalories",
        "parameters": [
          {
            "name": "Bearer Token",
            "in": "query",
            "description": "Add Bearer Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Here you add date, product, grams to diery",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMeal"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AddMeal"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AddMeal"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddMealResp"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AddMealResp"
                }
              }
            }
          },
          "404": {
            "description": "This product does not exist in the database"
          }
        }
      }
    },
    "/api/dailynutritions/getdailymeals": {
      "post": {
        "tags": ["Get meals for current day"],
        "summary": "Get info about product for a specific day",
        "description": "You send information about the date, product, grams and get info about product in diery",
        "operationId": "getDailyMeals",
        "parameters": [
          {
            "name": "Bearer Token",
            "in": "query",
            "description": "Add Bearer Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Here you send the date and get products from diery",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DailyMeals"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DailyMeals"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DailyMeals"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddMealResp"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddMealResp"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/dailynutritions/removeMeal/:{mealId}": {
      "delete": {
        "tags": ["Delete product by ID"],
        "summary": "Delete purchase product by ID",
        "description": "",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "name": "Bearer Token",
            "in": "query",
            "description": "Add Bearer Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mealId",
            "in": "path",
            "description": "ID of the order that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Meal deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Register": {
        "required": ["name", "email", "password"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "examplename"
          },
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "example": "qwerty123"
          }
        }
      },
      "RegisterResp": {
        "required": ["name", "email"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "examplename"
          },
          "email": {
            "type": "string",
            "example": "user@example.com"
          }
        }
      },
      "LoginResp": {
        "required": [
          "accessToken",
          "refreshToken",
          "dailyDiet",
          "user",
          "email",
          "name"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cC"
          },
          "dailyDiet": {
            "type": "object",
            "properties": {
              "calories": {
                "type": "integer",
                "format": "Int16",
                "example": 1357.75
              },
              "notAllowedProduct": {
                "$ref": "#/components/schemas/scema"
              }
            }
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6Ikp"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "user@example.com"
              },
              "password": {
                "type": "string",
                "example": "exampleName"
              }
            }
          }
        }
      },
      "CurrentUser": {
        "required": ["dailyDiet", "user", "email", "name"],
        "type": "object",
        "properties": {
          "dailyDiet": {
            "type": "object",
            "properties": {
              "calories": {
                "type": "integer",
                "format": "Int16",
                "example": 1357.75
              },
              "notAllowedProduct": {
                "$ref": "#/components/schemas/scema"
              }
            }
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "user@example.com"
              },
              "password": {
                "type": "string",
                "example": "exampleName"
              }
            }
          }
        }
      },
      "Refresh": {
        "required": ["accessToken", "refreshToken"],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cC"
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6Ikp"
          }
        }
      },
      "RefreshToken": {
        "required": ["refreshToken"],
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzODU4MTUwYzE3YjAwNzdiMGYzNTYwZSIsImlhdCI6MTY2OTg0Nzc4MSwiZXhwIjoxNjcwNDUyNTgxfQ.hrIeddE7J43nyleWTHUv7CmPCz6y_iG6NVa0K-e2iBE"
          }
        }
      },
      "ElementsInArray": {
        "type": "string",
        "example": "Млинці з грибами, Локшина домашня, …"
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "5d51694802b2373622ff554d"
          },
          "weight": {
            "type": "integer",
            "format": "Int16",
            "example": 100
          },
          "calories": {
            "type": "integer",
            "format": "Int16",
            "example": 1312
          },
          "title": {
            "type": "string",
            "example": "Горох маш Ярмарка Платинум"
          }
        }
      },
      "Anthropometry": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "format": "int16",
            "example": 175
          },
          "age": {
            "type": "integer",
            "format": "int16",
            "example": 35
          },
          "currentWeight": {
            "type": "integer",
            "format": "int16",
            "example": 70
          },
          "desiredWeight": {
            "type": "integer",
            "format": "int16",
            "example": 60
          },
          "bloodType": {
            "type": "integer",
            "format": "int16",
            "example": 2
          }
        }
      },
      "AnthropometryResp": {
        "type": "object",
        "properties": {
          "calories": {
            "type": "integer",
            "format": "int16",
            "example": 1357.75
          },
          "notAllowedProduct": {
            "$ref": "#/components/schemas/scema"
          }
        }
      },
      "scema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ElementsInArray"
        }
      },
      "AddMeal": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "example": "2022/10/15"
          },
          "product": {
            "type": "string",
            "example": "Локшина домашня"
          },
          "grams": {
            "type": "integer",
            "format": "int16",
            "example": 100
          }
        }
      },
      "AddMealResp": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "example": "2022/12/01"
          },
          "product": {
            "type": "string",
            "example": "Локшина домашня"
          },
          "grams": {
            "type": "integer",
            "format": "int16",
            "example": 100
          },
          "calories": {
            "type": "integer",
            "format": "int16",
            "example": 346
          },
          "_id": {
            "type": "string",
            "example": "637f5c511fe8d81915ac2de0"
          }
        }
      },
      "DailyMeals": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "example": "2022/10/15"
          }
        }
      }
    }
  }
}
